homeassistant:
  # Name of the location where Home Assistant is running
  name: Casa
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 140
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Rome
  # Customization file
  customize: !include customize.yaml
  packages: !include_dir_named packages

# Enables the frontend
frontend:
  themes: !include_dir_merge_named themes

# Enables configuration UI
config:

http:
  api_password: !secret api_password

panel_iframe:
  grafici:
    title: 'Grafici'
    icon: mdi:finance
    url: !secret grafanaurl
  cloud9:
    title: 'Cloud9'
    icon: mdi:code-braces
    url: !secret cloud9url
  proxmox:
    title: 'Proxmox'
    icon: mdi:server-network
    url: !secret proxmoxurl
  pihole:
    title: 'Pi-hole'
    icon: mdi:block-helper
    url: !secret piholeurl

variable: !include variables.yaml

ios:
  push:
    categories:
      - name: garage
        identifier: 'garage'
        actions:
          - identifier: 'APRI_GARAGE'
            title: 'Apri Garage'
            activationMode: 'background'
            authenticationRequired: no
            destructive: no
            behavior: 'default'
      - name: buonanotte
        identifier: 'buonanotte'
        actions:
          - identifier: 'BUONA_NOTTE'
            title: 'Buona notte'
            activationMode: 'background'
            authenticationRequired: no
            destructive: no
            behavior: 'default'

telegram_bot:
  - platform: polling
    api_key: !secret telegram_token
    parse_mode: html
    allowed_chat_ids:
      - !secret telegram_chat_id_bot
      - !secret telegram_chat_id_andrea
      - !secret telegram_chat_id_home
      - !secret telegram_chat_id_ubiss
      - !secret telegram_chat_id_friz

ifttt:
  key: !secret iftttkey

proximity:
  home:
    devices:
      - device_tracker.iphonex
    tolerance: 50
    unit_of_measurement: km
  ufficio:
    devices:
      - device_tracker.iphonex
    tolerance: 50
    unit_of_measurement: km
  genitori:
    devices:
      - device_tracker.iphonex
    tolerance: 50
    unit_of_measurement: km

notify:
  - platform: ios

  - platform: nfandroidtv
    name: tvSala
    host: 192.168.10.15

  - platform: telegram
    name: telegram bot
    chat_id: !secret telegram_chat_id_bot

  - platform: telegram
    name: telegram andrea
    chat_id: !secret telegram_chat_id_andrea

  - platform: telegram
    name: telegram home
    chat_id: !secret telegram_chat_id_home

  - platform: telegram
    name: telegram ubiss
    chat_id: !secret telegram_chat_id_ubiss

  - platform: telegram
    name: telegram friz
    chat_id: !secret telegram_chat_id_friz

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:
  ignore:
    - yeelight
    - harmony
    - denonavr

coinbase:
  api_key: !secret coinbase_api_key
  api_secret: !secret coinbase_api_secret
  exchange_rate_currencies:
    - ETH
    - LTC
    - BTC
    - BCH

history: !include config/histrory.yaml

recorder: !include config/recorder.yaml

zone:
  - name: Ufficio
    latitude: !secret ufficio_latitude
    longitude: !secret ufficio_longitude
    radius: 3
    icon: mdi:worker

  - name: Genitori
    latitude: !secret genitori_latitude
    longitude: !secret genitori_longitude
    radius: 100
    icon: mdi:account-multiple

remote:
  - platform: harmony
    name: Harmony Sala
    host: 192.168.10.9
    activity: Sky

hue:
  bridges:
    - host: 192.168.10.13
      allow_unreachable: true
      allow_hue_groups: false

xiaomi_aqara:
  gateways:
    - mac: !secret gwmac1
      key: !secret gwkey1
    - mac: !secret gwmac2
      key: !secret gwkey2

light:
  - platform: yeelight
    devices:
      192.168.10.22:
        name: Led 3
        transition: 350
        use_music_mode: True #(defaults to False)
        save_on_change: False #(defaults to True)
      192.168.10.35:
        name: Terrazzo 1
        transition: 350
        use_music_mode: True #(defaults to False)
        save_on_change: False #(defaults to True)
      192.168.10.36:
        name: Terrazzo 2
        transition: 350
        use_music_mode: True #(defaults to False)
        save_on_change: False #(defaults to True)
      192.168.10.23:
        name: Terrazzo 3
        transition: 350
        use_music_mode: True #(defaults to False)
        save_on_change: False #(defaults to True)

media_player:
  - platform: spotify
    client_id: !secret spotify_client_id
    client_secret: !secret spotify_client_secret

  - platform: denonavr
    host: 192.168.10.32
    name: Ampli Denon
    show_all_sources: True

  - platform: lg_netcast
    host: 192.168.10.29
    access_token: 791905
    name: Tv Camera

mqtt:
  broker: core-mosquitto
  username: !secret mqtt_username
  password: !secret mqtt_password
  discovery: true
  discovery_prefix: homeassistant
  birth_message:
    topic: "tele/hass1/LWT"
    payload: "Online"
    qos: 1
    retain: true
  will_message:
    topic: "tele/hass1/LWT"
    payload: "Offline"
    qos: 1
    retain: true

zwave:
  usb_path: /dev/ttyACM0

camera:
- platform: mjpeg
  mjpeg_url: http://192.168.10.16/image.jpg
  name: Cam Sala Dx

- platform: mjpeg
  mjpeg_url: http://192.168.10.18/image.jpg
  name: Cam Sala Sx

- platform: mjpeg
  mjpeg_url: http://192.168.10.19/image.jpg
  name: Cam Cucina

- platform: ffmpeg
  input: -rtsp_transport tcp -i rtsp://192.168.10.40:554/ch0_0.h264
  name: Cam Garage

- platform: mjpeg
  mjpeg_url: http://192.168.10.25/image.jpg
  name: Cam Corridoio

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

weather:
  - platform: yweather
    name: Meteo

binary_sensor:

  - platform: uptimerobot
    api_key: !secret uptimerobotkey

  - platform: template
    sensors:
      sensore_bagno_all:
        device_class: motion
        friendly_name: "Sensore Bagno OFF"
        value_template: "{{is_state ('binary_sensor.motion_sensor_158d0001232507', 'off') and is_state ('binary_sensor.motion_sensor_158d000132e942', 'off') and is_state ('binary_sensor.motion_sensor_158d00013f8c44', 'off')}}"

  - platform: template
    sensors:
      sensore_camera_all:
        device_class: motion
        friendly_name: "Sensore Camera OFF"
        value_template: "{{ is_state ('binary_sensor.motion_sensor_158d000120ac8c', 'off') and is_state ('binary_sensor.motion_sensor_158d00014dca3a', 'off')}}"

  - platform: template
    sensors:
      sensore_camera:
        device_class: motion
        friendly_name: "Sensore Camera"
        value_template: "{{ is_state ('binary_sensor.motion_sensor_158d000120ac8c', 'on') or is_state ('binary_sensor.motion_sensor_158d00014dca3a', 'on')}}"

  - platform: template
    sensors:
      sensore_bagno:
        device_class: motion
        friendly_name: "Sensore Bagno"
        value_template: "{{is_state ('binary_sensor.motion_sensor_158d0001232507', 'on') or is_state ('binary_sensor.motion_sensor_158d000132e942', 'on') or is_state ('binary_sensor.motion_sensor_158d00013f8c44', 'on')}}"

  - platform: template
    sensors:
      all_sensors:
        device_class: motion
        friendly_name: "Sensori"
        value_template: "{{is_state ('binary_sensor.motion_sensor_158d00010c24fe', 'on') or is_state ('binary_sensor.motion_sensor_158d0001136f8c', 'on') or is_state ('binary_sensor.motion_sensor_158d00011c3211', 'on') or is_state ('binary_sensor.motion_sensor_158d000120ac8c', 'on') or is_state ('binary_sensor.motion_sensor_158d0001232507', 'on') or is_state ('binary_sensor.motion_sensor_158d000128d5d5', 'on')or is_state ('binary_sensor.motion_sensor_158d00012cbb86', 'on')or is_state ('binary_sensor.motion_sensor_158d000132e942', 'on')or is_state ('binary_sensor.motion_sensor_158d00013f8c44', 'on')or is_state ('binary_sensor.motion_sensor_158d00014dca3a', 'on')or is_state ('binary_sensor.motion_sensor_158d0001dac0bd', 'on')}}"

  - platform: template
    sensors:
      all_porte:
        device_class: door
        friendly_name: "Porte"
        value_template: "{{is_state ('binary_sensor.door_window_sensor_158d00013e3968', 'on') or is_state ('binary_sensor.door_window_sensor_158d000153ab76', 'on') or is_state  ('binary_sensor.door_window_sensor_158d0001a348e1', 'on')}}"

  - platform: ping
    host: 192.168.10.16
    name: Cam Sala Dx
    scan_interval: 60

  - platform: ping
    host: 192.168.10.18
    name: Cam Sala Sx
    scan_interval: 60

  - platform: ping
    host: 192.168.10.19
    name: Cam Cucina
    scan_interval: 60

  - platform: ping
    host: 192.168.10.40
    name: Cam Garage
    scan_interval: 60

  - platform: ping
    host: 192.168.10.25
    name: Cam Corridoio
    scan_interval: 60

google:
  client_id: !secret gcalendarid
  client_secret: !secret gcalendarsecret

sensor:

  - platform: date_countdown
    name: Smetti di fumare in
    date: "05-11-2018 10:00"

  - platform: template
    sensors:
      smetti_di_fumare_days:
        friendly_name: Giorni da fumatore
        value_template: >-
          {{ states.sensor.smetti_di_fumare_in.attributes.giorni }}

#SpaceX Sensor THX to John https://community.home-assistant.io/t/spacex-sensors-starman-and-next-rocket-launch/65467

  - platform: rest
    name: Starman
    json_attributes:
      - earth_distance_mi
      - mars_distance_mi
      - orbit_type
    value_template: '{{ value_json["speed_kph"] }}'
    unit_of_measurement: "km/h"
    resource: 'https://api.spacexdata.com/v2/info/roadster'

  - platform: rest
    name: SpaceX
    json_attributes:
      - mission_name
      - launch_site
      - rocket
      - reuse
      - links
      - details
      - upcoming
      - static_fire_date_utc
    value_template: '{{ value_json["launch_date_unix"] }}'
    resource: 'https://api.spacexdata.com/v2/launches/next'

  - platform: template
    sensors:
      starman_speed:
        friendly_name: 'Starman Speed'
        value_template: '{{ states.sensor.starman.state | round(0) }}'
        unit_of_measurement: 'km/h'
      starman_earth_distance:
        friendly_name: 'Earth Distance'
        value_template: '{{ (states.sensor.starman.attributes["earth_distance_mi"] / 0.6214)| round(0) }}'
        unit_of_measurement: 'km'
      starman_mars_distance:
        friendly_name: 'Mars Distance'
        value_template: '{{ (states.sensor.starman.attributes["mars_distance_mi"] / 0.6214)| round(0) }}'
        unit_of_measurement: 'km'
      starman_orbit_type:
        friendly_name: 'Orbit Type'
        value_template: '{{ states.sensor.starman.attributes["orbit_type"] }}'
      spacex_next_launch_day:
        friendly_name: 'Next Launch Day'
        value_template: '{{ states.sensor.spacex.state | int | timestamp_custom("%m.%d.%Y")}}'
      spacex_next_launch_time:
        friendly_name: 'Next Launch Time'
        value_template: '{{ states.sensor.spacex.state | int | timestamp_custom("%H:%M")}}'
        unit_of_measurement: 'h'
      spacex_next_rocket:
        friendly_name: 'Rocket'
        value_template: '{{ states.sensor.spacex.attributes["rocket"]["rocket_name"] }}'
      spacex_next_launch_site_name_long:
        friendly_name: 'Next Launch'
        value_template: '{{ states.sensor.spacex.attributes["launch_site"]["site_name_long"] }}'
      spacex_next_mission_name:
        friendly_name: 'Mission'
        value_template: '{{ states.sensor.spacex.attributes["mission_name"] }}'
      spacex_next_launch_site_id:
        friendly_name: 'Launch Site ID'
        value_template: '{{ states.sensor.spacex.attributes.launch_site.site_id }}'
      spacex_next_launch_site_name:
        friendly_name: 'Site Name'
        value_template: '{{ states.sensor.spacex.attributes.launch_site.site_name }}'
      spacex_next_rocket_core_fs_serial:
        friendly_name: 'First Stage Core Serial'
        value_template: '{{ states.sensor.spacex.attributes.rocket.first_stage.cores[0].core_serial }}'
      spacex_next_rocket_core_fs_flight:
        friendly_name: 'First Stage Core Flight'
        value_template: '{{ states.sensor.spacex.attributes.rocket.first_stage.cores[0].flight }}'
      spacex_next_rocket_core_fs_block:
        friendly_name: 'First Stage Core Block'
        value_template: '{{ states.sensor.spacex.attributes.rocket.first_stage.cores[0].block }}'
      spacex_next_rocket_core_fs_reused:
        friendly_name: 'First Stage Core Reused'
        value_template: '{{ states.sensor.spacex.attributes.rocket.first_stage.cores[0].reused }}'
      spacex_next_rocket_core_fs_land_success:
        friendly_name: 'First Stage Core Land Success'
        value_template: '{{ states.sensor.spacex.attributes.rocket.first_stage.cores[0].land_success }}'
      spacex_next_rocket_core_fs_landing_type:
        friendly_name: 'First Stage Core Landing Type'
        value_template: '{{ states.sensor.spacex.attributes.rocket.first_stage.cores[0].landing_type }}'
      spacex_next_rocket_core_fs_landing_vehicle:
        friendly_name: 'First Stage Core Landing Vehicle'
        value_template: '{{ states.sensor.spacex.attributes.rocket.first_stage.cores[0].landing_vehicle }}'
      spacex_next_rocket_core_ss_block:
        friendly_name: 'Second Stage Block'
        value_template: '{{ states.sensor.spacex.attributes.rocket.second_stage.block }}'
      spacex_next_rocket_core_ss_payload_id:
        friendly_name: 'Second Stage Payload ID'
        value_template: '{{ states.sensor.spacex.attributes.rocket.second_stage.payloads[0].payload_id }}'
      spacex_next_rocket_core_ss_payload_reused:
        friendly_name: 'Second Stage Payload Reused'
        value_template: '{{ states.sensor.spacex.attributes.rocket.second_stage.payloads[0].reused }}'
      spacex_next_rocket_core_ss_payload_customer:
        friendly_name: 'Second Stage Payload Customer'
        value_template: '{{ states.sensor.spacex.attributes.rocket.second_stage.payloads[0].customers }}'
      spacex_next_rocket_core_ss_payload_nationality:
        friendly_name: 'Second Stage Payload Nationality'
        value_template: '{{ states.sensor.spacex.attributes.rocket.second_stage.payloads[0].nationality }}'
      spacex_next_rocket_core_ss_payload_manufacturer:
        friendly_name: 'Second Stage Payload Manufacturer'
        value_template: '{{ states.sensor.spacex.attributes.rocket.second_stage.payloads[0].manufacturer }}'
      spacex_next_rocket_core_ss_payload_type:
        friendly_name: 'Second Stage Payload Type'
        value_template: '{{ states.sensor.spacex.attributes.rocket.second_stage.payloads[0].payload_type }}'
      spacex_next_rocket_core_ss_payload_mass:
        friendly_name: 'Second Stage Payload Mass'
        value_template: '{{ states.sensor.spacex.attributes.rocket.second_stage.payloads[0].payload_mass_lbs }}'
        unit_of_measurement: 'lbs'
      spacex_next_rocket_core_ss_payload_orbit:
        friendly_name: 'Second Stage Payload Orbit'
        value_template: '{{ states.sensor.spacex.attributes.rocket.second_stage.payloads[0].orbit }}'
      spacex_next_rocket_core_ss_payload_orbit_lifespan:
        friendly_name: 'Second Stage Payload Orbit Lifespan'
        value_template: '{{ states.sensor.spacex.attributes.rocket.second_stage.payloads[0].orbit_params.lifespan_years }}'
        unit_of_measurement: 'years'
      spacex_next_rocket_fairings_reused:
        friendly_name: 'Fairings Reused'
        value_template: '{{ states.sensor.spacex.attributes.rocket.fairings.reused }}'
      spacex_next_rocket_reuse_fairings:
        friendly_name: 'Reuse Fairings'
        value_template: '{{ states.sensor.spacex.attributes.reuse.fairings }}'
      spacex_next_rocket_fairings_recovery_attempt:
        friendly_name: 'Fairings Recovery Attempt'
        value_template: '{{ states.sensor.spacex.attributes.rocket.fairings.recovery_attempt }}'
      spacex_next_rocket_fairings_recovered:
        friendly_name: 'Fairings Recovered'
        value_template: '{{ states.sensor.spacex.attributes.rocket.fairings.recovered}}'
      spacex_next_rocket_fairings_ship:
        friendly_name: 'Fairings Ship'
        value_template: '{{ states.sensor.spacex.attributes.rocket.fairings.ship}}'
      spacex_next_rocket_reuse_core:
        friendly_name: 'Reuse Core'
        value_template: '{{ states.sensor.spacex.attributes.reuse.core }}'
      spacex_next_rocket_reuse_side_core1:
        friendly_name: 'Reuse Side Core 1'
        value_template: '{{ states.sensor.spacex.attributes.reuse.side_core1 }}'
      spacex_next_rocket_reuse_side_core2:
        friendly_name: 'Reuse Side Core 2'
        value_template: '{{ states.sensor.spacex.attributes.reuse.side_core2 }}'
      spacex_next_rocket_reuse_capsule:
        friendly_name: 'Reuse Capsule'
        value_template: '{{ states.sensor.spacex.attributes.reuse.capsule }}'
      spacex_next_mission_patch:
        friendly_name: 'Mission Patch'
        value_template: '{{ states.sensor.spacex.attributes.links.mission_patch }}'
      spacex_next_mission_patch_small:
        friendly_name: 'Mission Patch Small'
        value_template: '{{ states.sensor.spacex.attributes.links.mission_patch_small }}'
      spacex_next_mission_reddit_campaign:
        friendly_name: 'Mission Reddit Campaign'
        value_template: '{{ states.sensor.spacex.attributes.links.reddit_campaign }}'
      spacex_next_mission_reddit_launch:
        friendly_name: 'Mission Reddit Launch'
        value_template: '{{ states.sensor.spacex.attributes.links.reddit_launch }}'
      spacex_next_mission_reddit_recovery:
        friendly_name: 'Mission Reddit Recovery'
        value_template: '{{ states.sensor.spacex.attributes.links.reddit_recovery }}'
      spacex_next_mission_reddit_media:
        friendly_name: 'Mission Reddit Media'
        value_template: '{{ states.sensor.spacex.attributes.links.reddit_media }}'
      spacex_next_mission_presskit:
        friendly_name: 'Mission Press Kit'
        value_template: '{{ states.sensor.spacex.attributes.links.presskit }}'
      spacex_next_mission_article:
        friendly_name: 'Mission Article'
        value_template: '{{ states.sensor.spacex.attributes.links.article_link}}'
      spacex_next_mission_wiki:
        friendly_name: 'Mission Wiki'
        value_template: '{{ states.sensor.spacex.attributes.links.wikipedia }}'
      spacex_next_mission_video_link:
        friendly_name: 'Mission Video Link'
        value_template: '{{ states.sensor.spacex.attributes.links.video_link }}'
      spacex_next_mission_static_fire:
        friendly_name: 'Mission Static Fire'
        value_template: '{{ states.sensor.spacex.attributes.static_fire_date_utc }}'

  - platform: template
    sensors:
      time_last_motion:
        friendly_name: Ultimo Movimento
        icon_template: mdi:map-marker
        value_template:  "{{states.variable.ultimo_movimento.state}} {{as_timestamp(states.variable.ultimo_movimento.last_changed) | timestamp_custom('%H:%M')}}"

  - platform: template
    sensors:
      variazione_crypto_oggi:
        friendly_name_template: "Variazione Crypto"
        icon_template: mdi:chart-bar
        value_template:  "{{(((states.sensor.saldo_crypto.state | float - states.input_number.crypto_fine.state | float)/states.sensor.saldo_crypto.state | float)*100)| round(2)}}"
        unit_of_measurement: '%'

  - platform: template
    sensors:
      consumo_oggi:
        friendly_name_template: "Consumo Odierno"
        icon_template: mdi:chart-bar
        value_template: "{{ (states.sensor.unknown_5.state | float - states.input_number.consumo_inizio.state | float) | round(2) }}"
        unit_of_measurement: 'kW'

  - platform: template
    sensors:
      costo_consumo_oggi:
        friendly_name_template: "Spesa Odierna"
        icon_template: mdi:coin
        value_template: "{{((states.sensor.consumo_oggi.state | float) * (0.21 | float)) | round(2)}}"
        unit_of_measurement: '€'

  - platform: template
    sensors:
      consumo_ieri:
        friendly_name_template: "Consumo Ieri"
        icon_template: mdi:chart-bar
        value_template: '{{(states.input_number.consumo_day.state | float)}}'
        unit_of_measurement: 'kW'

  - platform: template
    sensors:
      costo_consumo_ieri:
        friendly_name_template: "Spesa Ieri"
        icon_template: mdi:coin
        value_template: "{{((states.input_number.consumo_day.state | float) * (0.21 | float)) | round(2)}}"
        unit_of_measurement: '€'

  - platform: template
    sensors:
      consumo_attuale:
        friendly_name_template: "Totale Attuale"
        icon_template: mdi:chart-bar
        value_template: '{{(states.sensor.widom_ume304_energy_driven_switch_power.state | float)}}'
        unit_of_measurement: 'W'

  - platform: template
    sensors:
      consumo_mensile_oggi:
        friendly_name_template: "Consumo Mensile"
        icon_template: mdi:chart-bar
        value_template: "{{ (states.sensor.unknown_5.state | float - states.input_number.consumo_mese_inizio.state | float) | round(2) }}"
        unit_of_measurement: 'kW'

  - platform: template
    sensors:
      costo_consumo_mese_attuale:
        friendly_name_template: "Spesa Mensile"
        icon_template: mdi:coin
        value_template: "{{((states.sensor.consumo_mensile_oggi.state | float) * (0.21 | float)) | round(2)}}"
        unit_of_measurement: '€'

  - platform: template
    sensors:
      costo_consumo_mensile:
        friendly_name_template: "Spesa Mensile"
        icon_template: mdi:coin
        value_template: "{{((states.input_number.consumo_mese.state | float) * (0.21 | float)) | round(2)}}"
        unit_of_measurement: '€'

  - platform: template
    sensors:
      consumo_luci:
        friendly_name: "Consumo Luci"
        icon_template: mdi:chart-bar
        unit_of_measurement: 'W'
        value_template: "{{ (states.sensor.fibaro_system_fgs223_double_relay_power_9.state | float + states.sensor.fibaro_system_fgs223_double_relay_power.state | float + states.sensor.fibaro_system_fgs223_double_relay_power_4.state | float + states.sensor.fibaro_system_fgs223_double_relay_power_3.state | float + states.sensor.fibaro_system_fgs223_double_relay_power_5.state | float + states.sensor.fibaro_system_fgs223_double_relay_power_2.state | float + states.sensor.fibaro_system_fgs223_double_relay_power_6.state | float + states.sensor.fibaro_system_fgs223_double_relay_power_8.state | float) | round(2) }} "

  - platform: template
    sensors:
      consumo_elettrodomestici:
        friendly_name: "Consumo Elettrodomestici"
        icon_template: mdi:chart-bar
        unit_of_measurement: 'W'
        value_template: "{{ (states.sensor.neo_coolcam_power_plug_12a_power_4.state | float + states.sensor.neo_coolcam_power_plug_12a_power.state | float + states.sensor.neo_coolcam_power_plug_12a_power_2.state | float + states.sensor.neo_coolcam_power_plug_12a_power_3.state | float + states.sensor.neo_coolcam_power_plug_12a_power_5.state | float + states.sensor.consumo_htcamera.state | float + states.sensor.consumo_tvsala.state | float + states.sensor.consumo_studio.state | float)| round(2) }} "

  - platform: template
    sensors:
      consumo_giornaliero_medio:
        friendly_name: "Consumo Day Medio"
        icon_template: mdi:chart-bar
        value_template: '{{ (states.sensor.consumo_ieri_mean.attributes.median | float) | round(2) }}'
        unit_of_measurement: 'kW'

  - platform: template
    sensors:
      consumo_giornaliero_max:
        friendly_name: "Consumo Day Massimo"
        icon_template: mdi:chart-bar
        value_template: '{{ (states.sensor.consumo_ieri_mean.attributes.max_value | float) | round(2) }}'
        unit_of_measurement: 'kW'

  - platform: template
    sensors:
      consumo_giornaliero_min:
        friendly_name: "Consumo Day Minimo"
        icon_template: mdi:chart-bar
        value_template: '{{ (states.sensor.consumo_ieri_mean.attributes.min_value | float) | round(2) }}'
        unit_of_measurement: 'kW'

  - platform: template
    sensors:
      costo_giornaliero_medio:
        friendly_name: "Costo Day Medio"
        icon_template: mdi:coin
        value_template: '{{ states.sensor.costo_ieri_mean.attributes.median | float }}'
        unit_of_measurement: '€'

  - platform: template
    sensors:
      costo_giornaliero_max:
        friendly_name: "Costo Day Massimo"
        icon_template: mdi:coin
        value_template: '{{ states.sensor.costo_ieri_mean.attributes.max_value | float }}'
        unit_of_measurement: '€'

  - platform: template
    sensors:
      costo_giornaliero_min:
        friendly_name: "Costo Day Minimo"
        icon_template: mdi:coin
        value_template: '{{ states.sensor.costo_ieri_mean.attributes.min_value | float }}'
        unit_of_measurement: '€'

  - platform: template
    sensors:
      download_medio:
        friendly_name: "Download Medio"
        icon_template: mdi:chart-bar
        value_template: '{{ states.sensor.statistiche_download_mean.attributes.median | float }}'
        unit_of_measurement: 'Mbit/s'

  - platform: template
    sensors:
      upload_medio:
        friendly_name: "Upload Medio"
        icon_template: mdi:chart-bar
        value_template: '{{ states.sensor.statistiche_upload_mean.attributes.median | float }}'
        unit_of_measurement: 'Mbit/s'

  - platform: template
    sensors:
      ping_medio:
        friendly_name: "Ping Medio"
        icon_template: mdi:chart-bar
        value_template: '{{ states.sensor.statistiche_ping_mean.attributes.median | float }}'
        unit_of_measurement: 'ms'

  - platform: template
    sensors:
      ufficio_casa_medio:
        friendly_name: "Ufficio Casa Media"
        icon_template: mdi:chart-bar
        value_template: '{{ states.sensor.statistiche_ufficio_casa_mean.attributes.median | int }}'
        unit_of_measurement: 'min'

  - platform: template
    sensors:
      casa_ufficio_medio:
        friendly_name: "Casa Ufficio Media"
        icon_template: mdi:chart-bar
        value_template: '{{ states.sensor.statistiche_casa_ufficio_mean.attributes.median | int }}'
        unit_of_measurement: 'min'

  - platform: pi_hole
    host: localhost:4865
    monitored_conditions:
      - ads_blocked_today
      - ads_percentage_today
      - dns_queries_today
      - domains_being_blocked
      - queries_cached
      - queries_forwarded
      - unique_clients
      - unique_domains
      - clients_ever_seen

  - platform: uptime
    name: HA attivo da
    unit_of_measurement: hours

  - platform: statistics
    name: Statistiche Consumo Attuale
    entity_id: sensor.widom_ume304_energy_driven_switch_power

  - platform: statistics
    name: Consumo Ieri
    entity_id: sensor.consumo_ieri

  - platform: statistics
    name: Costo Ieri
    icon: mdi:coin
    entity_id: sensor.costo_consumo_ieri

  - platform: statistics
    name: Statistiche Crypto
    entity_id: sensor.saldo_crypto

  - platform: statistics
    name: Statistiche Download
    entity_id: sensor.speedtest_download

  - platform: statistics
    name: Statistiche Upload
    entity_id: sensor.speedtest_upload

  - platform: statistics
    name: Statistiche Ping
    entity_id: sensor.speedtest_ping

  - platform: statistics
    name: Statistiche Casa Ufficio
    entity_id: sensor.casa_ufficio

  - platform: statistics
    name: Statistiche Ufficio Casa
    entity_id: sensor.ufficio_casa

  - platform: time_date
    display_options:
      - 'time'
      - 'date'

  - platform: template
    sensors:
      saldo_crypto:
        friendly_name: "Saldo Crypto"
        icon_template: mdi:coin
        value_template: '{{ ((states.sensor.coinbase_portafoglio_eth.attributes["Balance in native currency"] | replace(" EUR", "") | float ) + (states.sensor.coinbase_portafoglio_ltc.attributes["Balance in native currency"] | replace(" EUR", "") | float ) + (states.sensor.coinbase_portafoglio_bch.attributes["Balance in native currency"] | replace(" EUR", "") | float ) + (states.sensor.coinbase_portafoglio_btc.attributes["Balance in native currency"] | replace(" EUR", "") | float )) |round(2)}}'
        unit_of_measurement: '€'

  - platform: template
    sensors:
      badge_costo_consumo:
        friendly_name: "Spesa Odierna"
        icon_template: mdi:coin
        value_template: '{{states.sensor.costo_consumo_oggi.state}}'
        unit_of_measurement: '€'

  - platform: template
    sensors:
      badge_costo_mensile:
        friendly_name: "Spesa Mensile"
        icon_template: mdi:coin
        value_template: '{{states.sensor.costo_consumo_mese_attuale.state}}'
        unit_of_measurement: '€'

  - platform: template
    sensors:
      spazzatura:
        friendly_name: Ritiro
        icon_template: mdi:delete-empty
        value_template: >
          {% if now().strftime('%A') == 'Monday' %}
            Organico
          {% elif now().strftime('%A') == 'Tuesday' %}
            Carta e Indifferenziato
          {% elif now().strftime('%A') == 'Wednesday' %}
            Nessun ritiro
          {% elif now().strftime('%A') == 'Thursday' %}
            Plastica e Vetro
          {% elif now().strftime('%A') == 'Friday' %}
            Nessun ritiro
          {% elif now().strftime('%A') == 'Saturday' %}
            Nessun ritiro
          {% elif now().strftime('%A') == 'Sunday' %}
            Organico
          {% endif %}

  - platform: template
    sensors:
      perdi_guadagna:
        entity_id:  sensor.variazione_crypto_oggi
        friendly_name: "Stato Day Crypto"
        icon_template: mdi:coin
        value_template: >
          {% if states('states.sensor.variazione_crypto_oggi.state')| float > 0 %}
            Guadagnando
          {% else %}
            Perdendo
          {% endif %}

  - platform: template
    sensors:
      stato_tv:
        entity_id: sensor.stato_harmony
        friendly_name: "Stato TV"
        icon_template: mdi:animation-play
        value_template: >
          {% if is_state('sensor.stato_harmony', 'PowerOff') %}
            Spenta
          {% elif is_state('sensor.stato_harmony', 'Sky') %}
            Sky
          {% elif is_state('sensor.stato_harmony', 'Apple TV') %}
            Apple TV
          {% elif is_state('sensor.stato_harmony', 'PC') %}
            PC
          {% endif %}

  - platform: template
    sensors:
      stato_lavastoviglie:
        friendly_name: "Lavastoviglie"
        icon_template: mdi:tumble-dryer
        value_template: >-
          {% if states.sensor.neo_coolcam_power_plug_12a_power_2 | int < 1 %}
            Spenta
          {% elif sates.sensor.neo_coolcam_power_plug_12a_power_2 | int > 1 %}
            Lavaggio in corso
          {% endif %}

  - platform: template
    sensors:
      stato_lavatrice:
        friendly_name: "Lavatrice"
        icon_template: mdi:washing-machine
        value_template: >-
          {% if states.sensor.neo_coolcam_power_plug_12a_power_3 | int < 1 %}
            Spenta
          {% elif sates.sensor.neo_coolcam_power_plug_12a_power_3 | int > 1 %}
            Lavaggio in corso
          {% endif %}

  - platform: template
    sensors:
      stato_forno:
        friendly_name: "Forno"
        icon_template: mdi:stove
        value_template: >-
          {% if states.sensor.neo_coolcam_power_plug_12a_power_4 | int < 1 %}
            Spento
          {% elif sates.sensor.neo_coolcam_power_plug_12a_power_4 | int > 1 %}
            In funzione
          {% endif %}

  - platform: template
    sensors:
      stato_denon:
        friendly_name: "Stato Denon"
        icon_template: mdi:volume-high
        value_template: '{{ states.media_player.ampli_denon.state}}'

  - platform: template
    sensors:
      stato_harmony:
        friendly_name: "Stato TV"
        icon_template: mdi:animation-play
        value_template: '{{ states.remote.harmony_sala.attributes.current_activity }}'

  - platform: template
    sensors:
      qualita_aria:
        friendly_name: "Qualità Aria"
        icon_template: mdi:fan
        value_template: '{{ states.fan.xiaomi_miio_device.attributes.aqi }}'
        unit_of_measurement: 'pm 2.5'

  - platform: template
    sensors:
      purifier_stato:
        friendly_name: "Stato"
        icon_template: mdi:fan
        value_template: '{{ states.fan.xiaomi_miio_device.state }}'

  - platform: template
    sensors:
      purifier_mode:
        friendly_name: "Modalità"
        icon_template: mdi:fan
        value_template: '{{ states.fan.xiaomi_miio_device.attributes.mode }}'

  - platform: template
    sensors:
      purifier_filter:
        friendly_name: "Utilizzo Filtro"
        icon_template: mdi:fan
        value_template: '{{ states.fan.xiaomi_miio_device.attributes.filter_hours_used }}'
        unit_of_measurement: 'ore'

  - platform: template
    sensors:
      purifier_filter_remain:
        friendly_name: "Vita Restante Filtro"
        icon_template: mdi:fan
        value_template: '{{ states.fan.xiaomi_miio_device.attributes.filter_life_remaining }}'
        unit_of_measurement: '%'

  - platform: template
    sensors:
      purifier_aria_purificata:
        friendly_name: "Aria Purificata"
        icon_template: mdi:fan
        value_template: '{{ states.fan.xiaomi_miio_device.attributes.purify_volume }}'
        unit_of_measurement: 'mc'

  - platform: template
    sensors:
      franchino_stato:
        friendly_name: "Stato"
        icon_template: mdi:robot-vacuum
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.status }}'

  - platform: template
    sensors:
      franchino_mode:
        friendly_name: "Modalità Pulizia"
        icon_template: mdi:robot-vacuum
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.fan_speed }}'

  - platform: template
    sensors:
      franchino_batteria:
        friendly_name: "Batteria"
        icon_template: mdi:robot-vacuum
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_level }}'
        unit_of_measurement: '%'

  - platform: template
    sensors:
      franchino_tempo_pulizia:
        friendly_name: "Tempo Pulizia"
        icon_template: mdi:robot-vacuum
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time }}'
        unit_of_measurement: 'minuti'

  - platform: template
    sensors:
      franchino_area_pulita:
        friendly_name: "Area Pulita"
        icon_template: mdi:robot-vacuum
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaned_area }}'
        unit_of_measurement: 'mq'

  - platform: template
    sensors:
      franchino_vita_spazzola_1:
        friendly_name: "Ore Restanti Spazzola Interna"
        icon_template: mdi:robot-vacuum
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left }}'
        unit_of_measurement: 'ore'

  - platform: template
    sensors:
      franchino_vita_spazzola_2:
        friendly_name: "Ore Restanti Spazzola Esterna"
        icon_template: mdi:robot-vacuum
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left }}'
        unit_of_measurement: 'ore'

  - platform: template
    sensors:
      franchino_vita_filtro:
        friendly_name: "Ore Restanti Filtro"
        icon_template: mdi:robot-vacuum
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left }}'
        unit_of_measurement: 'ore'

  - platform: template
    sensors:
      franchino_totale_mq:
        friendly_name: "Totale mq Puliti"
        icon_template: mdi:robot-vacuum
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.total_cleaned_area }}'
        unit_of_measurement: 'mq'

  - platform: template
    sensors:
      franchino_totale_ore:
        friendly_name: "Tempo Totale Pulizia"
        icon_template: mdi:robot-vacuum
        value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.total_cleaning_time }}'
        unit_of_measurement: 'minuti'

  - platform: template
    sensors:
      consumo_tvsala:
        friendly_name: "Consumo TV Sala"
        icon_template: mdi:flash
        value_template: '{{ states.switch.plug_158d00015db991.attributes.load_power }}'
        unit_of_measurement: 'W'

  - platform: template
    sensors:
      consumo_htcamera:
        friendly_name: "Consumo HT Camera"
        icon_template: mdi:flash
        value_template: '{{ states.switch.plug_158d000154ae55.attributes.load_power }}'
        unit_of_measurement: 'W'

  - platform: template
    sensors:
      consumo_studio:
        friendly_name: "Consumo Studio"
        icon_template: mdi:flash
        value_template: '{{ states.switch.plug_158d0001233ea0.attributes.load_power }}'
        unit_of_measurement: 'W'

  - platform: template
    sensors:
      temperatura_cucina:
        friendly_name: "Temperatura Cucina"
        icon_template: mdi:temperature-celsius
        value_template: "{{ (states.sensor.temperature_158d00015a6698.state | float) }}"
        unit_of_measurement: '°C'

  - platform: template
    sensors:
      umidita_cucina:
        friendly_name: "Umidità Cucina"
        icon_template: mdi:water-percent
        value_template: "{{ (states.sensor.humidity_158d00015a6698.state | float) }}"
        unit_of_measurement: '%'

  - platform: template
    sensors:
      portafoglio_eth:
        friendly_name: "Portafoglio ETH"
        icon_template: mdi:coin
        value_template: '{{ states.sensor.coinbase_portafoglio_eth.attributes["Balance in native currency"] }}'

  - platform: template
    sensors:
      portafoglio_ltc:
        friendly_name: "Portafoglio LTC"
        icon_template: mdi:coin
        value_template: '{{ states.sensor.coinbase_portafoglio_ltc.attributes["Balance in native currency"] }}'

  - platform: template
    sensors:
      portafoglio_bch:
        friendly_name: "Portafoglio BCH"
        icon_template: mdi:coin
        value_template: '{{ states.sensor.coinbase_portafoglio_bch.attributes["Balance in native currency"] }}'

  - platform: template
    sensors:
      portafoglio_btc:
        friendly_name: "Portafoglio BTC"
        icon_template: mdi:coin
        value_template: '{{ states.sensor.coinbase_portafoglio_btc.attributes["Balance in native currency"] }}'

  - platform: template
    sensors:
      impegnigcal:
        friendly_name: "Impegni"
        icon_template: mdi:calendar
        value_template: !secret gcalmessageattribute

  - platform: template
    sensors:
      festivitagcal:
        friendly_name: "Festività"
        icon_template: mdi:calendar
        value_template: "{{states.calendar.festivita_in_italia.attributes.message}}"

  - platform: moon

#Moon Template THX to Alby https://github.com/JohnnyZeta/hassio

  - platform: template
    sensors:
      fasilunari:
        #entity_id: sensor.moon
        friendly_name: "Luna"
        icon_template: >
          {% if is_state('sensor.moon', 'new_moon') %}
            mdi:circle-outline
          {% elif is_state('sensor.moon', 'waxing_crescent') %}
            mdi:arrow-up-bold
          {% elif is_state('sensor.moon', 'first_quarter') %}
            mdi:arrow-up-bold
          {% elif is_state('sensor.moon', 'waxing_gibbous') %}
            mdi:arrow-up-bold
          {% elif is_state('sensor.moon', 'full_moon') %}
            mdi:brightness-1
          {% elif is_state('sensor.moon', 'waning_gibbous') %}
            mdi:arrow-down-bold
          {% elif is_state('sensor.moon', 'last_quarter') %}
            mdi:arrow-down-bold
          {% elif is_state('sensor.moon', 'waning_crescent') %}
            mdi:arrow-down-bold
          {% endif %}
        value_template: >
          {% if is_state('sensor.moon', 'new_moon') %}
            Luna Nuova
          {% elif is_state('sensor.moon', 'waxing_crescent') %}
            Luna Crescente
          {% elif is_state('sensor.moon', 'first_quarter') %}
            Primo Quarto
          {% elif is_state('sensor.moon', 'waxing_gibbous') %}
            Gibbosa Crescente
          {% elif is_state('sensor.moon', 'full_moon') %}
            Luna Piena
          {% elif is_state('sensor.moon', 'waning_gibbous') %}
            Gibbosa Calante
          {% elif is_state('sensor.moon', 'last_quarter') %}
            Ultimo Quarto
          {% elif is_state('sensor.moon', 'waning_crescent') %}
            Luna Calante
          {% endif %}

  - platform: darksky
    api_key: !secret darksky_api_key
    name: Previsioni
    monitored_conditions:
      - summary
      - icon
      - apparent_temperature
      - wind_speed
      - cloud_cover

  - platform: google_travel_time
    api_key: !secret google_api_key
    name: Casa Ufficio
    origin: !secret casa_origin
    destination: !secret office_origin

  - platform: google_travel_time
    api_key: !secret google_api_key
    name: Ufficio Casa
    origin: !secret office_origin
    destination: !secret casa_origin

  - platform: speedtest
    minute: 27
    monitored_conditions:
      - ping
      - download
      - upload

  - platform: systemmonitor
    resources:
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: processor_use
    - type: since_last_boot

vacuum:
  - platform: xiaomi_miio
    host: 192.168.10.33
    token: !secret mirobot_token

fan:
  - platform: xiaomi_miio
    host: 192.168.10.17
    token: !secret purifier_token

switch:
  - platform: mqtt
    name: "Sonoff Garage"
    state_topic: "/garage/rele/state"
    command_topic: "/garage/gpio/12"
    payload_on: "1"
    payload_off: "0"
    qos: 1
    retain: true

  - platform: mqtt
    name: "Sonoff Luci Garage"
    state_topic: "stat/lucigarage/POWER"
    command_topic: "cmnd/lucigarage/POWER"
    availability_topic: "tele/lucigarage/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false

  - platform: broadlink
    host: 192.168.10.20
    mac: '34ea34e3b4c1'
    friendly_name: Broadlink Sala
    type: rm_mini
    switches:
      powersky:
        friendly_name: "Power Sky"
        command_on: 'JgA+AFYeDg8ODw4eDh4cDw4PDhANEA0QDRAODw4PHB4ODw4QDRANEA0QHBANHhwfDRANEA0QDg8cEA0eDg8OAA0FAAAAAAAAAAAAAA=='
        command_off: 'JgA+AFYeDg8ODw4eDh4cDw4PDhANEA0QDRAODw4PHB4ODw4QDRANEA0QHBANHhwfDRANEA0QDg8cEA0eDg8OAA0FAAAAAAAAAAAAAA=='

      climasala:
        friendly_name: "Clima Sala"
        command_on: 'JgBQAg0NDg8ODw0PDRANAANDcToOLA0PDRANDg0tDQ8NEA0PDQ8NLA0QDSsPKw4PDSwNLA0sDSwNLQ4NDRANLA0QDQ4NEA0QDQ8MEA0PDRANDw0PDSwODw0sDRAMEA0PDSwNLA4PDQ0PDw0QDRAMDw0QDQ8NDw0QDQ8NDw0QDQ8NEAwPDS0NLA0sDg8NLA0PDSwOLA0ABHxyOg0sDQ8NDw0QDSwODg0PDRANDw0tDA8NLA4sDQ8NLA0tDSwOKw4rDg8NDg0tDQ8NEA0PDBANEA0PDQ8NEAwQDQ8NDw0tDQ0PEAwPDQ8OLA0QDSwNLA0sDisNLQ4NDS0NDw0sDRANLA0sDSwOLA0PDA8PDwwQDQ8NDw0tDSwOKw0sDQAEfHM5DisNEA0PDBANLA0QDRAMDw4PDSwNEAwtDisODg0sDSwNLA0sDisODw0QDSwODg0PDRANDw0PDRANDw0PDRAMEA0QDA8ODw0PDg4NEA0PDRAMLQwQDQ8NLQ0sDisNEA0ODRANLA0sDRANLA0sDg4NEA0NDxAMDw4PDRANDg0QDQ8NEAwQDQ8NEA0PDSwNDw0tDQ8NDw0PDRANEAwPDRANDw0PDRANDw0QDBANDw0QDQ4NEA0sDisODw0PDQ8NEA0PDQ8ODw0PDQ8NEA0sDSwODQ8PDBANDw0QDQ8NDw0QDRAMDg4PDg8NDw0QDQ8NDw0QDSwNDw0QDBANDw0PDiwNLA4ODQ8NEA0QDA8NDw4QDA8NEA0PDQ8NEA0PDRAMEAwQDRANDg0QDSwODw0PDC4MDw0ADQUOKw0QDQ8MEA=='
        command_off: 'JgBQAg0PDQ8NEAwQDQ4OAANBczsNLA0PDRANEAwtDA8NEA0QDQ4NLA0QDSwNLA0QDisNLA4sDSwNLA0PDQ8NLA0QDRAMDw0QDQ8NDw0QDQ8NEAwRDCwNDw0tDQ8NDw0PDS0NLA4ODRAMEA0PDRAMEA0PDRANDg0QDRAMEAwQDQ8NEA0PDSwNLA0sDQ8OLA0QDSwOKw0ABHxyOg0sDg4NDw0QDSwNEAwQDBANEA0sDQ8MLQ0sDg4NLQ0sDSwNLA0sDRANEAwtDA8NEA0QDQ4NEA0QDBAMEA0PDRAMEA0sDQ8NDg8PDQ8NLA0QDSwNEAwQDBANEA0sDisNDw0sDRANLA0sDSwNLA0QDQ8NDw0sDRANEAwtDC0MLQwtDAAEfnI5DC0NDw0QDQ8NLA0PDRANDw0QDC0MEA4rDSwNEA0sDSwNLA0sDS0NDw0PDSwNEA0PDQ8NEAwQDRAMDw0QDRANDg0QDQ8NEAwQDQ8NEA0PDQ8NEA0ODRANLA0sDS0NDw0QDA8NLQ0sDQ8OLA0sDQ8NDw0QDQ8NDw4PDBANEA0ODRANEA0PDBANEAwQDC0MEA0sDQ8ODw0PDRANDw0QDA8NEA0QDQ4NEA0QDBAMEA0PDRAMEA0sDSwNEA0PDQ8NEAwQDRAMDw0QDRAMDw0sDS0NDw0QDQ8NDw0QDQ8MEA0QDQ8NDw0PDRANEAwPDRANDw0PDSwNEA0QDBAMEA0PDS0NLA0PDQ8NEA0PDQ8NEAwQDRAMDw0QDRAMDw0QDQ8NEAwQDSwNLA4rDQ8ODw0PDSwNEA0ADQUMLQ0PDRANDw=='

      superclimasala:
        friendly_name: "Clima Super Sala"
        command_on: 'JgBQAg4ODRANDw0PDRANAANDcjkNLA0QDRAMEAwtDQ8NEAwQDRAMLA0QDSwOKw0PDysNLA0sDSwNLA0RCxANLA0QDBELDw8ODRANEA0ODRENDwwPDSwNEA0sDREMDg0QDSwNLA0RDA8MEA0QDQ8NDw0RDBAMEAwRDQ4NEQsQDQ8NEQwPDSsNLQ0sDQ8NLQ0PDSwNLQwABH1xOw0sDQ8NEA0PDSwNEAwPDRANDw4sDA8NLA0tDQ8NLA0tDC0NLA4rDREMEAwsDQ8NEQ0ODQ8NEQwQDQ8NDwwQDRAMDw0sDg8NEQ0ODBENKw0QDQ8NEA0PDSwNLA0RDA4NLQwtDRANKw0tDQ8NLA0RDA8NLA0PDRANLA0sDQ8NEQ0ODQAEfXE6DSwODg0RDQ4NLQ0PDQ8NEA0PDC0NDw0sDSwNEA0sDSwNLA0tDSwNDw0PDSwNEA0PDRAMEA0PDRANDwwRDRANDwwPDRANDw0PDRAMEAwSDA4NLQwRDRAMLA0sDSwNDw0QDQ8MLQ0QDQ8NLA0sDRANDwwQDRANEAwQDQ8NDw0RDA4MEg0PDA8NEQwQDCwODg0sDRANEAwQDRAMDw0QDRANDw0QDBAMDw0RDA8NDw0QDRANDg0sDSwOEA0PDRAMEA0ODRAMEQwQDRAMEAwtDC0MEAwtDQ8NEA0PDQ8NEA0PDRANDwwQDBANEAwQDQ8NDw0QDSwNEQwODRENDw0PDCwNLQ0PDhANDgwRDBANEAwPDRANDw0PDQ8NEQ0PDQ4NEA0QDisNDwwtDQ8NEQwPDSwNDwwADQUNLA4ODRENDg=='
        command_off: 'JgBQAg8NDw0PDg4ODw0PAANBczkPKg8NEA0PDg4rDg4PDQ8ODwwPKw8NDyoQKg8NDyoPKw8qECkQKQ8NDw0PKw8NDw4ODQ8ODw4PDA8ODw4ODg4ODyoPDg8qDw0PDQ8ODyoPKg8ODw0MEA8NDw4MEA8NDw4NDw8NDRAPDQ0PDRANDw8NDSwPKg8qDw4PKg4PDSwOKw8ABHtxOg4rDw0NEA0PDSwPDgwQDw0NEA0sDw0NLA4rDw4NLA8qDyoPKw0sDw0NEAwtDBANDw8ODQ8NDw0QDQ4ODw0QDQ8MEA0sDw4NDw8NDRANLA8NDS0PKg8qDyoPKg8ODBANLA8qDw4OKw8qDw4NLA8MDRAPDg0ODRANDw0QDC0MEA4ODgAEfHE6DysPDQ0PDRANLA4ODg8MEA0PDSwODwwtDC0NDw4rDisOLA4rDisODw0PDSwPDQ4PDQ8NEAwQDQ8NEA0ODRANEA0PDBANDw4PDQ8NDw0QDQ8NLA4ODRANLA4rDisODwwQDQ8NLQ0PDQ8NLA8qDg8NDw0QDBANDw0QDQ8NDw0QDQ4ODw0QDQ8MEA0PDiwODg0sDg4NEA0PDRAMEA0PDg8NDg4PDRANDg0QDRANDwwQDQ8NEA0sDisODg0QDQ8NEAwQDQ8NEA0ODRANEA0sDisODwwPDRANDw0PDRANDw0PDRANDw0QDA8ODw0QDQ4NEA0QDSwODgwQDRANDwwQDSwOKw4PDg4ODg0QDQ8NEAwQDQ8NEA0PDQ8NEA0PDBANEA0PDBANDw0tDg4ODg0PDiwODg4ADQUPKw8NDQ8NEA=='


  - platform: broadlink
    host: 192.168.10.21
    mac: '34ea34e3db0e'
    friendly_name: Broadlink Camera
    type: rm_mini
    switches:
      tv_camera:
        friendly_name: "Tv Camera"
        command_on: 'JgBYAAABIJISExETETcSEhISEhQQFBETETcROBESEjcRNhM1EjcTNRMTERISNxEUERMSExE2EjYSNhM2EhIROBE3ETcREhITEgAFGwABH0oSAAwzAAEfShEADQU='
        command_off: 'JgBYAAABKZQRFBEUETgRFBEUERQRFBEUETkROREUETgRORE5ETkROREUERQRFBE4ERQRFBEUERQRORE5ETkRFBA5ETkRORE5EQAFLAABKUoRAAxiAAEpShEADQU='

      climacamera:
        friendly_name: "Clima Camera"
        command_on: 'JgBQAg0NDg8ODw0PDRANAANDcToOLA0PDRANDg0tDQ8NEA0PDQ8NLA0QDSsPKw4PDSwNLA0sDSwNLQ4NDRANLA0QDQ4NEA0QDQ8MEA0PDRANDw0PDSwODw0sDRAMEA0PDSwNLA4PDQ0PDw0QDRAMDw0QDQ8NDw0QDQ8NDw0QDQ8NEAwPDS0NLA0sDg8NLA0PDSwOLA0ABHxyOg0sDQ8NDw0QDSwODg0PDRANDw0tDA8NLA4sDQ8NLA0tDSwOKw4rDg8NDg0tDQ8NEA0PDBANEA0PDQ8NEAwQDQ8NDw0tDQ0PEAwPDQ8OLA0QDSwNLA0sDisNLQ4NDS0NDw0sDRANLA0sDSwOLA0PDA8PDwwQDQ8NDw0tDSwOKw0sDQAEfHM5DisNEA0PDBANLA0QDRAMDw4PDSwNEAwtDisODg0sDSwNLA0sDisODw0QDSwODg0PDRANDw0PDRANDw0PDRAMEA0QDA8ODw0PDg4NEA0PDRAMLQwQDQ8NLQ0sDisNEA0ODRANLA0sDRANLA0sDg4NEA0NDxAMDw4PDRANDg0QDQ8NEAwQDQ8NEA0PDSwNDw0tDQ8NDw0PDRANEAwPDRANDw0PDRANDw0QDBANDw0QDQ4NEA0sDisODw0PDQ8NEA0PDQ8ODw0PDQ8NEA0sDSwODQ8PDBANDw0QDQ8NDw0QDRAMDg4PDg8NDw0QDQ8NDw0QDSwNDw0QDBANDw0PDiwNLA4ODQ8NEA0QDA8NDw4QDA8NEA0PDQ8NEA0PDRAMEAwQDRANDg0QDSwODw0PDC4MDw0ADQUOKw0QDQ8MEA=='
        command_off: 'JgBQAg0PDQ8NEAwQDQ4OAANBczsNLA0PDRANEAwtDA8NEA0QDQ4NLA0QDSwNLA0QDisNLA4sDSwNLA0PDQ8NLA0QDRAMDw0QDQ8NDw0QDQ8NEAwRDCwNDw0tDQ8NDw0PDS0NLA4ODRAMEA0PDRAMEA0PDRANDg0QDRAMEAwQDQ8NEA0PDSwNLA0sDQ8OLA0QDSwOKw0ABHxyOg0sDg4NDw0QDSwNEAwQDBANEA0sDQ8MLQ0sDg4NLQ0sDSwNLA0sDRANEAwtDA8NEA0QDQ4NEA0QDBAMEA0PDRAMEA0sDQ8NDg8PDQ8NLA0QDSwNEAwQDBANEA0sDisNDw0sDRANLA0sDSwNLA0QDQ8NDw0sDRANEAwtDC0MLQwtDAAEfnI5DC0NDw0QDQ8NLA0PDRANDw0QDC0MEA4rDSwNEA0sDSwNLA0sDS0NDw0PDSwNEA0PDQ8NEAwQDRAMDw0QDRANDg0QDQ8NEAwQDQ8NEA0PDQ8NEA0ODRANLA0sDS0NDw0QDA8NLQ0sDQ8OLA0sDQ8NDw0QDQ8NDw4PDBANEA0ODRANEA0PDBANEAwQDC0MEA0sDQ8ODw0PDRANDw0QDA8NEA0QDQ4NEA0QDBAMEA0PDRAMEA0sDSwNEA0PDQ8NEAwQDRAMDw0QDRAMDw0sDS0NDw0QDQ8NDw0QDQ8MEA0QDQ8NDw0PDRANEAwPDRANDw0PDSwNEA0QDBAMEA0PDS0NLA0PDQ8NEA0PDQ8NEAwQDRAMDw0QDRAMDw0QDQ8NEAwQDSwNLA4rDQ8ODw0PDSwNEA0ADQUMLQ0PDRANDw=='

      superclimacamera:
        friendly_name: "Clima Super Camera"
        command_on: 'JgBQAg4ODRANDw0PDRANAANDcjkNLA0QDRAMEAwtDQ8NEAwQDRAMLA0QDSwOKw0PDysNLA0sDSwNLA0RCxANLA0QDBELDw8ODRANEA0ODRENDwwPDSwNEA0sDREMDg0QDSwNLA0RDA8MEA0QDQ8NDw0RDBAMEAwRDQ4NEQsQDQ8NEQwPDSsNLQ0sDQ8NLQ0PDSwNLQwABH1xOw0sDQ8NEA0PDSwNEAwPDRANDw4sDA8NLA0tDQ8NLA0tDC0NLA4rDREMEAwsDQ8NEQ0ODQ8NEQwQDQ8NDwwQDRAMDw0sDg8NEQ0ODBENKw0QDQ8NEA0PDSwNLA0RDA4NLQwtDRANKw0tDQ8NLA0RDA8NLA0PDRANLA0sDQ8NEQ0ODQAEfXE6DSwODg0RDQ4NLQ0PDQ8NEA0PDC0NDw0sDSwNEA0sDSwNLA0tDSwNDw0PDSwNEA0PDRAMEA0PDRANDwwRDRANDwwPDRANDw0PDRAMEAwSDA4NLQwRDRAMLA0sDSwNDw0QDQ8MLQ0QDQ8NLA0sDRANDwwQDRANEAwQDQ8NDw0RDA4MEg0PDA8NEQwQDCwODg0sDRANEAwQDRAMDw0QDRANDw0QDBAMDw0RDA8NDw0QDRANDg0sDSwOEA0PDRAMEA0ODRAMEQwQDRAMEAwtDC0MEAwtDQ8NEA0PDQ8NEA0PDRANDwwQDBANEAwQDQ8NDw0QDSwNEQwODRENDw0PDCwNLQ0PDhANDgwRDBANEAwPDRANDw0PDQ8NEQ0PDQ4NEA0QDisNDwwtDQ8NEQwPDSwNDwwADQUNLA4ODRENDg=='
        command_off: 'JgBQAg8NDw0PDg4ODw0PAANBczkPKg8NEA0PDg4rDg4PDQ8ODwwPKw8NDyoQKg8NDyoPKw8qECkQKQ8NDw0PKw8NDw4ODQ8ODw4PDA8ODw4ODg4ODyoPDg8qDw0PDQ8ODyoPKg8ODw0MEA8NDw4MEA8NDw4NDw8NDRAPDQ0PDRANDw8NDSwPKg8qDw4PKg4PDSwOKw8ABHtxOg4rDw0NEA0PDSwPDgwQDw0NEA0sDw0NLA4rDw4NLA8qDyoPKw0sDw0NEAwtDBANDw8ODQ8NDw0QDQ4ODw0QDQ8MEA0sDw4NDw8NDRANLA8NDS0PKg8qDyoPKg8ODBANLA8qDw4OKw8qDw4NLA8MDRAPDg0ODRANDw0QDC0MEA4ODgAEfHE6DysPDQ0PDRANLA4ODg8MEA0PDSwODwwtDC0NDw4rDisOLA4rDisODw0PDSwPDQ4PDQ8NEAwQDQ8NEA0ODRANEA0PDBANDw4PDQ8NDw0QDQ8NLA4ODRANLA4rDisODwwQDQ8NLQ0PDQ8NLA8qDg8NDw0QDBANDw0QDQ8NDw0QDQ4ODw0QDQ8MEA0PDiwODg0sDg4NEA0PDRAMEA0PDg8NDg4PDRANDg0QDRANDwwQDQ8NEA0sDisODg0QDQ8NEAwQDQ8NEA0ODRANEA0sDisODwwPDRANDw0PDRANDw0PDRANDw0QDA8ODw0QDQ4NEA0QDSwODgwQDRANDwwQDSwOKw4PDg4ODg0QDQ8NEAwQDQ8NEA0PDQ8NEA0PDBANEA0PDBANDw0tDg4ODg0PDiwODg4ADQUPKw8NDQ8NEA=='


  - platform: template
    switches:
      shuffle_spotify:
        friendly_name: Shuffle
        value_template: "{{ is_state_attr('media_player.spotify', 'shuffle', true) }}"
        turn_on:
          - service: media_player.shuffle_set
            data:
              entity_id: media_player.spotify
              shuffle: true
        turn_off:
          - service: media_player.shuffle_set
            data:
              entity_id: media_player.spotify
              shuffle: false

  - platform: flux
    lights:
      - light.faretto
      - light.flos
      - light.terrazzo_1
      - light.terrazzo_2
      - light.terrazzo_3
    name: Fluxer
    start_colortemp: 4000
    sunset_colortemp: 3000
    stop_colortemp: 1900
    brightness: 200
    disable_brightness_adjust: false
    mode: xy
    transition: 5
    interval: 60

tts:
  platform: google
  language: 'it'

input_select:

  spotify_playlist:
    name: 'Playlist:'
    options:
      - Preferiti
      - Magnifikka
      - Nuove
      - Relax
      - Classic
      - Vasco
      - Fabrizio
      - Italia in alta rotazione
    icon: mdi:spotify

  spotify_source:
    name: 'Sorgente:'
    options:
      - Piano Terra
      - Primo Piano
      - Ampli Denon
    icon: mdi:speaker-wireless

  telecomando_select:
    name: 'Telecomando:'
    options:
      - Scegli
      - Sky
      - Apple TV
      - DTT
      - PC
    icon: mdi:remote

input_number:

  crypto_fine:
    name: Crypto Fine
    min: 1
    max: 5000
    mode: box
    unit_of_measurement: '€'

  consumo_inizio:
    name: Consumo Inizio
    min: 1
    max: 5000
    mode: box
    unit_of_measurement: 'kWh'

  consumo_fine:
    name: Consumo Fine
    min: 1
    max: 5000
    mode: box
    unit_of_measurement: 'kWh'

  consumo_day:
    name: Consumo Giornaliero
    min: 1
    max: 5000
    mode: box
    unit_of_measurement: 'kWh'

  consumo_mese_inizio:
    name: Consumo Inizio
    min: 1
    max: 5000
    mode: box
    unit_of_measurement: 'kWh'

  consumo_mese_fine:
    name: Consumo Fine
    min: 1
    max: 5000
    mode: box
    unit_of_measurement: 'kWh'

  consumo_mese:
    name: Consumo Giornaliero
    min: 1
    max: 5000
    mode: box
    unit_of_measurement: 'kWh'

  spotify_volume:
    name: Spotify
    icon: mdi:volume-high
    min: 0.3
    max: 0.65
    step: 0.01
    initial: 0.4

  denon_volume:
    name: Volume Denon
    icon: mdi:volume-high
    min: 0.3
    max: 0.65
    step: 0.01
    initial: 0.5

influxdb:
  host: a0d7b954-influxdb
  port: 8086
  database: !secret influxdb_db
  username: !secret influxdb_user
  password: !secret influxdb_pwd
  max_retries: 3
  default_measurement: state

google_assistant:
  project_id: home-assistant-2173c
  client_id: !secret google_assistant_client_id
  access_token: !secret google_assistant_access_token
  agent_user_id: [a string to identify user]
  api_key: [a Homegraph API Key generated for the Google Actions project]
  exposed_domains:
    - switch
    - light
    - fan

cloud: !include config/cloud.yaml
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
homekit: !include config/homekit.yaml
cover: !include cover.yaml
input_boolean: !include config/input_boolean.yaml
history_graph: !include config/history_graph.yaml
